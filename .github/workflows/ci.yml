name: CI

on:
  push:
    branches: [main, develop, "feature/*", "hotfix/*", "bugfix/*", "release/*"]
    paths-ignore: ["**/*.md","docs/**"]
  pull_request:
    branches: [main, develop]
    paths-ignore: ["**/*.md","docs/**"]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: laravel
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          TZ: Asia/Tokyo
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
          coverage: pcov
          extensions: mbstring, intl, pdo_mysql, bcmath, pcntl

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      # テスト専用 .env.testing を MySQL で明示
      - name: Prepare .env.testing (MySQL)
        run: |
          cat > .env.testing <<'EOF'
          APP_ENV=testing
          APP_KEY=base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
          APP_DEBUG=true
          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=testing
          DB_USERNAME=laravel
          DB_PASSWORD=password
          CACHE_DRIVER=array
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=array
          MAIL_MAILER=array
          EOF
          php artisan config:clear

      - name: Wait for MySQL
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -ularavel -ppassword --silent; then
              echo "MySQL is up"; break; fi
            echo "waiting mysql..."; sleep 2
          done

      - name: Migrate
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: laravel
          DB_PASSWORD: password
        run: php artisan migrate --force

      - name: Pint (format check)
        run: composer lint

      - name: PHPStan (static analysis)
        run: composer stan

      - name: PHPUnit with coverage (100% gate)
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: laravel
          DB_PASSWORD: password
        run: |
          vendor/bin/phpunit --coverage-clover coverage.xml
          php -r '
            $xml = simplexml_load_file("coverage.xml");
            $m = $xml->project->metrics;
            $pct = ((int)$m["statements"]) ? ((int)$m["coveredstatements"]/(int)$m["statements"]*100) : 0;
            echo "Coverage: ".round($pct,2)." %\n";
            if ($pct < 100) { fwrite(STDERR, "Coverage must be 100%.\n"); exit(1); }
          '

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}
          path: coverage.xml
