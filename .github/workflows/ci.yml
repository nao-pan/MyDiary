name: CI

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - hotfix/*
      - bugfix/*
      - release/*
    paths-ignore:
      - "**/*.md"
      - "docs/**"
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - "**/*.md"
      - "docs/**"

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      APP_KEY: base64:0000000000000000000000000000000000000000000=
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
          coverage: pcov
          extensions: mbstring, intl, pdo_mysql, bcmath, pcntl

      - name: Composer install
        run: |
            composer install --no-interaction --prefer-dist --no-progress
            cp .env.example .env
            php -r "file_put_contents('.env', preg_replace([
              '/^DB_CONNECTION=.*/m',
              '/^DB_HOST=.*/m',
              '/^DB_PORT=.*/m',
              '/^DB_DATABASE=.*/m',
              '/^DB_USERNAME=.*/m',
              '/^DB_PASSWORD=.*/m',
            ], [
              'DB_CONNECTION=sqlite',
              'DB_HOST=',
              'DB_PORT=',
              'DB_DATABASE=',
                'DB_USERNAME=',
              'DB_PASSWORD=',
            ], file_get_contents('.env')));"
            php -r "if (!is_dir('database')) mkdir('database'); touch('database/database.sqlite');"
            php artisan key:generate
            php artisan config:clear
      
      - name: Sanity check (今の接続設定を出力)
        run: |
          php -r "echo 'DB_CONNECTION='.(getenv('DB_CONNECTION')?:'').PHP_EOL;"
          php -r "echo 'DB_DATABASE='.(getenv('DB_DATABASE')?:'').PHP_EOL;"

      - name: Migrate
        env:
          DB_CONNECTION: sqlite           # ← 念のため強制
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --force

      - name: Pint (format check)
        run: composer lint

      - name: PHPStan (static analysis)
        run: composer stan

      - name: PHPUnit with coverage (100% gate)
        run: |
          vendor/bin/phpunit --coverage-clover coverage.xml
          php -r '
            $xml = simplexml_load_file("coverage.xml");
            $m = $xml->project->metrics;
            $pct = ((int)$m["statements"]) ? ((int)$m["coveredstatements"]/(int)$m["statements"]*100) : 0;
            echo "Coverage: ".round($pct,2)." %\n";
            if ($pct < 100) { fwrite(STDERR, "Coverage must be 100%.\n"); exit(1); }
          '

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}
          path: coverage.xml
